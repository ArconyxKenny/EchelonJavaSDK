plugins {
    id 'java'
    id("maven-publish")
    id 'application'
    id 'distribution'

}

group = 'org.EchelonJavaSDK'



version = file('version.txt').text.trim()
java {
    withSourcesJar()
    toolchain.languageVersion = JavaLanguageVersion.of(8)

}

repositories {
    mavenCentral()
}


dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "com.google.code.gson:gson:2.10.1"
    implementation 'org.java-websocket:Java-WebSocket:1.5.5'
    implementation "javax.json:javax.json-api:1.0"
    implementation "org.glassfish:javax.json:1.0.1"
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'commons-codec:commons-codec:1.16.0'
    implementation 'org.slf4j:slf4j-reload4j:2.0.11'
}


application {
    mainClass = 'com.Test.TestConsoleApp'
}


test {
    useJUnitPlatform()
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/aidie8/MinecraftEchelonForge")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

jar
{
    manifest {
        archiveClassifier = 'slim'
        attributes([
                "Specification-Title": "EchelonJavaSDk",
                "Specification-Vendor": "Aidie8",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "Aidie8",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),


        ])

    }
}